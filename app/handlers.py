from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, Command, StateFilter
from aiogram.types import (Message, CallbackQuery, ReplyKeyboardRemove,
                           InlineKeyboardMarkup, InlineKeyboardButton, Chat, User)
import app.keyboards as kb
from app.states import Purchase
from aiogram.fsm.context import FSMContext
from dotenv import load_dotenv
import os
from app.get_exchangerate import get_exchangerate
import app.database.db_requests as rq
import app.crypto_intergration.crypto_requests as ci_req
from app.fragment_api.stars_purchse import purchase

load_dotenv()
router = Router()


@router.message(CommandStart())
async def send_welcome(message: Message, state: FSMContext):
    await state.set_state(None)
    await state.set_state("chat_id")
    await message.reply("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ StarSeller üëã \n\n–•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∑–≤—ë–∑–¥?)", reply_markup=kb.main)


@router.message(F.text == "–ö—É–ø–∏—Ç—å –∑–≤—ë–∑–¥ ‚≠ê")
async def buy_stars(message: Message, state: FSMContext):
    await state.update_data(chat_id=message.chat.id)
    await message.answer(
        ".",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.set_state(Purchase.amount)
    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏:", reply_markup=kb.buy_stars)


@router.message(F.text == "–¶–µ–Ω–∞üí≤")
async def buy_stars(message: Message, state: FSMContext):
    await state.set_state(None)
    await message.reply("–¶–µ–Ω–∞ –∑–∞ –æ–¥–Ω—É –∑–≤–µ–∑–¥—É üåü —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ <b>0.019 –¥–æ–ª–ª–∞—Ä–∞ –°–®–ê</b>."
                        "\n\n–ö–æ–≥–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑, —ç—Ç–∞ —Å—É–º–º–∞ "
                        "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ—Ç—Å—è \n\n –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–º–∏ –≤–∞–ª—é—Ç—É"
                        "üí∞ ‚Äî –≥—Ä–∏–≤–Ω—É üá∫üá¶, —Ä—É–±–ª—å üá∑üá∫ –∏–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É USDT ‚Äî –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É. üìà",
                        parse_mode="HTML")


@router.message(F.text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def buy_stars(message: Message, state: FSMContext):
    await state.set_state(None)
    await message.reply(
        "üì© –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ email:\n"
        "<code>sstarsellersup@gmail.com</code>\n\n"
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∞–¥—Ä–µ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –ø–∏—Å—å–º–æ. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤! üöÄ",
        parse_mode="HTML"
    )


@router.message(F.text == "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?üõ†Ô∏è")
async def buy_stars(message: Message, state: FSMContext):
    await state.set_state(None)
    await message.reply(""" 
                        –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?

            \n\n–í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ –∏ –±—ã—Å—Ç—Ä–æ! –í–æ—Ç –∫–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –∑–≤—ë–∑–¥:
            
            \n\n1.  <b>–í—ã–±–æ—Ä –∑–≤—ë–∑–¥.</b> –¢—ã –≤—ã–±–∏—Ä–∞–µ—à—å, —Å–∫–æ–ª—å–∫–æ –∑–≤—ë–∑–¥ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å. ‚ú®
            \n2.  <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å.</b> –£–∫–∞–∑—ã–≤–∞–µ—à—å username –≤ Telegram —Ç–æ–≥–æ, –∫–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–≤—ë–∑–¥—ã.
            \n3.  <b>–û–ø–ª–∞—Ç–∞.</b> –í—ã–±–∏—Ä–∞–µ—à—å —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö (–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, –≥—Ä–∏–≤–Ω–∞ –∏–ª–∏ —Ä—É–±–ª—å). üí∞
            \n4.  <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.</b> –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—à—å —ç—Ç–æ –≤ –±–æ—Ç–µ, –∏ –Ω–∞—à –∞–¥–º–∏–Ω –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é. 
            \n5.  <b>–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ.</b> –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–≤—ë–∑–¥—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–æ–±–æ–π –∞–∫–∫–∞—É–Ω—Ç! ‚úÖ
                
                        """,
                        parse_mode="HTML")


@router.message(F.text == "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
async def buy_stars(message: Message, state: FSMContext):
    await state.set_state(None)
    await message.reply(""" 
<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ Starseller</b>

\n
<b>1. –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è</b>

\n
–≠—Ç–∞ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ Starseller –≤
 Telegram (–¥–∞–ª–µ–µ ‚Äî ¬´–ë–æ—Ç¬ª). –ú—ã —É–≤–∞–∂–∞–µ–º –ø—Ä–∞–≤–æ –Ω–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –æ–±—è–∑—É–µ–º—Å—è –∑–∞—â–∏—â–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.

\n
<b>2. –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã —Å–æ–±–∏—Ä–∞–µ–º?</b>

\n
–ú—ã —Å–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ë–æ—Ç–∞:

    <b>Telegram ID:</b> –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º —Å–≤—è–∑—ã–≤–∞—Ç—å—Å—è —Å –≤–∞–º–∏.
    <b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram:</b> –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ–±—â–µ–Ω–∏—è –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
    <b>–î–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö:</b> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –∑–≤—ë–∑–¥.
     –ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –ø–æ–ª–Ω—ã–µ –ø–ª–∞—Ç—ë–∂–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.


\n
<b>3. –ö–∞–∫ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ?</b>

\n
–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Ü–µ–ª–µ–π:

    <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤:</b> –ü–µ—Ä–µ–¥–∞—á–∞ –∑–≤—ë–∑–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç –≤ Telegram.
    <b>–°–≤—è–∑—å —Å –≤–∞–º–∏:</b> –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞, –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.
    <b>–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è:</b> –ê–Ω–∞–ª–∏–∑ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –ë–æ—Ç–∞.


\n
<b>4. –ö–∞–∫ –º—ã –∑–∞—â–∏—â–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ?</b>

\n
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –≤—Å–µ —Ä–∞–∑—É–º–Ω—ã–µ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ä—ã –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞,
–∏–∑–º–µ–Ω–µ–Ω–∏—è, —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è. –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö.

\n
<b>5. –ö–æ–º—É –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ?</b>

\n
–ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞—ë–º –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
–¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–ª–∞—Ç—ë–∂–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏) –∏–ª–∏ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞.

\n
<b>6. –°—Ä–æ–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö</b>

\n
–ú—ã —Ö—Ä–∞–Ω–∏–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ä–æ–≤–Ω–æ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞—à–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤
–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª—è—é—Ç—Å—è.

\n
<b>7. –í–∞—à–∏ –ø—Ä–∞–≤–∞</b>

\n
–í—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç:

–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–∏–º –¥–∞–Ω–Ω—ã–º.
–ü–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
–ü–æ–ø—Ä–æ—Å–∏—Ç—å —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ (–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –Ω–∞—à–∏–º —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º).


\n
<b>8. –°–æ–≥–ª–∞—Å–∏–µ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π</b>

\n
–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à –ë–æ—Ç, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ —ç—Ç–æ–π –ü–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.
–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –∫–∞–∫–∏–º–∏-–ª–∏–±–æ –µ—ë –ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å.
                         """,
                        parse_mode="HTML")


@router.callback_query(F.data == "cancel")
async def cancel(callback: CallbackQuery, state: FSMContext):
    await callback.answer("–û—Ç–º–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    await state.set_state(None)
    await callback.message.edit_text(
        text=f"–û—Ç–º–µ–Ω–∞ ‚ùå",
        reply_markup=None
    )
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∏–±—É–¥—å:", reply_markup=kb.main)


@router.callback_query((F.data).startswith("cn_USDT:"))
async def cancel(callback: CallbackQuery, state: FSMContext):
    await callback.answer("–û—Ç–º–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")

    await ci_req.cancel_invoice(str(callback.data.split(":")[1]))
    await state.set_state(None)
    await callback.message.edit_text(
        text=f"–û—Ç–º–µ–Ω–∞ ‚ùå",
        reply_markup=None
    )
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∏–±—É–¥—å:", reply_markup=kb.main)


@router.callback_query(Purchase.amount)
async def choose_amount(callback: CallbackQuery, state: FSMContext):
    stars_amount = callback.data.split(":")[1]
    await callback.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {stars_amount} –∑–≤—ë–∑–¥")
    await state.update_data(amount=stars_amount)
    await callback.message.edit_text(
        text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {stars_amount} ‚≠ê",
        reply_markup=None
    )
    await state.set_state(Purchase.username)
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", reply_markup=kb.username)


@router.message(Purchase.username)
async def choose_username(message: Message, state: FSMContext):
    username = message.text
    if username[0] == "@":
        username = username[1:]
    await state.update_data(username=username)
    await state.set_state(Purchase.purchase_method)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–∞–ª–∞—Ç—ã:", reply_markup=kb.purchase_method)


@router.callback_query(Purchase.purchase_method)
async def choose_purchase(callback: CallbackQuery, state: FSMContext):
    await state.update_data(purchase_method=callback.data)
    await callback.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {callback.data}")
    await state.set_state(Purchase.accepted)
    data = await state.get_data()
    await callback.message.edit_text(
        text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {callback.data}",
        reply_markup=None
    )
    await callback.message.answer(f"       –í–∞—à –∑–∞–∫–∞–∑: \n\n {data['amount']} ‚≠ê\n\n –ü–æ–ª—É—á–∞—Ç–µ–ª—å: @{data['username']}\n\n"
                                  f"–°–ø–æ—Å–æ–± –û–ø–ª–∞—Ç—ã: {data['purchase_method']}", reply_markup=kb.accept_or_deny)


@router.callback_query(Purchase.accepted)
async def choose_status(callback: CallbackQuery, state: FSMContext):
    await state.update_data(accepted="True")
    data = await state.get_data()
    exchangerate = await get_exchangerate()
    await callback.answer("–ù–∞–∂–∞–≤ —ç—Ç—É –∫–Ω–æ–ø–∫—É –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —á—Ç–æ –≤—Å–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã", show_alert=True)
    await callback.message.edit_text(
        text=callback.message.text,
        reply_markup=None
    )
    await state.set_state(Purchase.payment_status)
    new_order = await rq.set_order(data["chat_id"], data["username"], data["amount"], data["purchase_method"],
                                   data["accepted"], "pending")
    if data["purchase_method"] == "UAH":
        await callback.message.answer(f"–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, —Å–æ–≤–µ—Ä—à–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Äa–µ–≤–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã "
                                      f"\n \n <code>{os.getenv('CARDNUMBER')}</code>"
                                      f"\n \n –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {int((float(os.getenv('PRICE')) * int(data['amount'])) * exchangerate)} {data['purchase_method']}"
                                      f"\n \n –í–ê–ñ–ù–û ‚ùó‚ùó‚ùó"
                                      f"\n \n –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –ø–µ—Ä–µ–≤–æ–¥—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
                                      f"\n \n –í–∞—à ID –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (<code>{new_order.id}</code>)",
                                      parse_mode="HTML", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data=str(new_order.id))],
                [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ ‚ùå", callback_data="cancel")]

            ]))

    elif data["purchase_method"] == "USDT":
        invoice_url = await ci_req.create_invoice(int(data["amount"]), str(new_order.id))
        await rq.add_uuid(new_order.id, invoice_url[1])
        await callback.message.answer(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã!"
                                      f"\n \n {invoice_url[0]}",
                                      parse_mode="HTML", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data=str(new_order.id))],
                [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ ‚ùå", callback_data=f"cn_USDT:{invoice_url[1]}")]]))


@router.callback_query(Purchase.payment_status)
async def payment_status(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await callback.answer("–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –æ–ø–ª–∞—Ç—É ‚úÖ")
    await callback.message.edit_text(
        text=callback.message.text,
        reply_markup=None
    )
    await callback.message.answer(
        "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –æ–ø–ª–∞—Ç—É ‚úÖ, –æ–∂–∏–¥–∞–π—Ç–µ —ë—ë –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã —ç—Ç–æ –∑–∞–π–º—ë—Ç –æ–∫–æ–ª–æ 15 –º–∏–Ω—É—Ç")
    await bot.send_message(
        chat_id=os.getenv("ADMIN_ID"),
        text=f"‚ùóÔ∏è **–ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É –æ—Ç {callback.data}**",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úÖ", callback_data="adm_conf:" + callback.data)],
            [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ ‚ùå", callback_data="cancel")]

        ])
    )


@router.callback_query((F.data).startswith("adm_conf:"))
async def confirm_payment(callback: CallbackQuery, state: FSMContext, bot: Bot):
    if callback.from_user.id != int(os.getenv("ADMIN_ID")):
        await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.")
        return
    await callback.answer("–í—ã –ø–æ–¥—Ç–≤—Ä–µ–¥–∏–ª–∏ –ø–ª–∞—Ç—ë–∂")
    transaction_id = int(callback.data.split(":")[1])
    order_data = await rq.get_chat_id(transaction_id)
    for order in order_data:
        await bot.send_message(
            chat_id=order.chat_id,
            text=f"üéâ –í–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–∞ {order.amount} ‚≠ê –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ó–≤–µ–∑–¥—ã –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
            reply_markup=kb.main
        )
        stars_buy = await purchase(order.amount, order.username)
        try:
            if stars_buy["success"]:
                await rq.update_payment_status(transaction_id, "completed")
                await callback.message.edit_text(f"‚úÖ –ü–ª–∞—Ç–µ–∂ #{transaction_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω", reply_markup=None)
        except Exception as e:
            await callback.message.edit_text(f"–í –ü–ª–∞—Ç–µ–∂–µ #{transaction_id} –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞‚ùó‚ùó‚ùó", reply_markup=None)
            await rq.update_payment_status(transaction_id, "error")
